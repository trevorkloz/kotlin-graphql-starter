type Query {
    personSearch(input: Search): SearchResult!
}

input Search {
    lastname: String @Size( min : 0, max : 255) @Check
    firstname: String @Size( min : 0, max : 255) @Check
    street: String @Size( min : 0, max : 255) @Check
    _pageNum: Int = 1 @Positive
    _fetch: Int = 25 @Range(min: 0, max: 100)
    _sortBy: SortBy
    _sortDirection: SortDirection
}

enum SortDirection {
    ASC
    DESC
}

enum SortBy {
    LASTNAME
    FIRSTNAME
}

type SearchResult {
    _totalCount: Int!
    _totalTime: Int!
    _pageCount: Int!
    _pageNum: Int!
    _fetchSize: Int!
    _hasNextPage: Boolean!
    objects: [Person]!
}

type Person {
    id: ID!,
    lastname: String,
    firstname: String
    address: Address
}

type Address {
    id: ID!,
    street: String,
    city: City
}

type City {
    name: String,
    state: String
}

